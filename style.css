/* h1,
h2,
h3,
h4,
p,
li {
  font-family: sans-serif;
  color: #444;
} */

/* for properties that don't get automatically inherited like border-top; lowest priority */
* {
  /* border-top: 10px solid #1098ad; */
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* PAGE SECTIONS */
body {
  color: #444;
  font-family: sans-serif;

  border-top: 10px solid #1098ad;
  position: relative;
}

.container {
  width: 1200px;
  /* margin-left: auto;
  margin-right: auto; */
  margin: 0 auto;
  /* setting left & rt margins to auto will center the container inside the browser */

  /* position: relative; */
  /* to make the position of the button relative to the container */
}

.main-header {
  background-color: #f7f7f7;
  /* padding: 20px;
  padding-left: 40px;
  padding-right: 40px; */
  padding: 20px 40px;
  margin-bottom: 60px;
  /* height: 80px;    ===> since height has been set to a specific value, block-level elements no longer fits the container w/c is why this is not recommended */
}

nav {
  font-size: 18px;
  text-align: center;
  /* the a elements are now centered since the parent element 'nav" has been centered using 'text-align: center;' */
}

article {
  margin-bottom: 60px;
}

.post-header {
  margin-bottom: 40px;
  /* position: relative; */
  /* button is now positioned relatively w/  <header class="post-header"> */
}

aside {
  background-color: #f7f7f7;
  border-top: 5px solid #1098ad;
  border-bottom: 5px solid #1098ad;
  padding: 50px 40px;
  /* margin-bottom: 60px; */
  /* when creating space outside of an element or bet multiple elements , choose only 1 bet margin-top or margin-bottom(PREFERABLY) */

  /* when you need space inside an element, esp when there is a background-color or a border, use  padding  */
  /* width: 500px; */
  /* box-sizing: border-box; */
}

/* SMALLER ELEMENTS */
h1,
h2,
h3 {
  color: #1098ad;
}

h1 {
  font-size: 26px;
  text-transform: uppercase;
  font-style: italic;
}

h2 {
  font-size: 40px;
  margin-bottom: 30px;
}

h3 {
  font-size: 30px;
  margin-bottom: 20px;
  margin-top: 40px;
}

h4 {
  font-size: 20px;
  text-transform: uppercase;
  text-align: center;
}

p {
  font-size: 22px;
  line-height: 1.5;
  margin-bottom: 15px;
}

ul,
ol {
  margin-left: 50px;
  margin-bottom: 20px;
}

li {
  font-size: 20px;
  margin-bottom: 10px;
  /* change a block-level element like 'li' to inline */
  /* display: inline; */
}

li:last-child {
  margin-bottom: 0;
}

/* footer p {
  font-size: 16px;
} */

/* article header p {
  font-style: italic;
} */

#author {
  font-style: italic;
  font-size: 18px;
}

#copyright {
  font-size: 16px;
}

.related-author {
  font-size: 18px;
  font-weight: bold;
}

/* ul {
  list-style: none;
} */

.related {
  list-style: none;
  margin-left: 0;
}

body {
}

/* .first-li {
  font-weight: bold;
} */

li:first-child {
  font-weight: bold;
}

li:last-child {
  font-style: italic;
}

/* li:nth-child(2) {
  color: red;
} */

li:nth-child(even) {
  /* color: red; */
}

article p:last-child {
  /* color: rosybrown; */
}

/* article p:first-child { ---> MISCONCEPTION: doesn't work bec 'header' is the 1st child of 'article'
  color: red;
}

article p:nth-child(2) {       ------> this would work instead
  color: aqua;
} */

/* Styling Links */
/* a {
  color: red;
} */

/* targets those w/ href attribute */
a:link {
  color: #1098ad;
  text-decoration: none;
}

a:visited {
  /* color: #777 */
  color: #1098ad;
}

a:hover {
  color: orangered;
  font-weight: bold;
  /* text-decoration: underline wavy orangered; */
  text-decoration: underline orangered;
}

a:active {
  background-color: black;
  font-style: italic;
}

/* !!!!  LVHA */

.post-img {
  /* width: 800px; the percentage of the width of the orig container, the header, w/c is basically the size of the entire width of the page; even if the size of the window is changed, the image will adapt as well */
  width: 100%;

  /* overridden the 500px width */
  height: auto;
  /* will automatically adapt to the orig aspect ratio of the image; this is only necessary if a height value has already been specified previously */

  /* margin: 100px; */
  /* 'img' behaves like an inline-block element since margins are applied not just horizontally but vertically as well */
}

nav a:link {
  /* background-color: orangered;
  margin: 20px; */
  /* top & bottom margins remained unchanged bec the 'a' is an inline element; solution is to change display to block  */
  /* padding: 20px;
  display: block; */
  /* height: 80px;    ===> since height has been set to a specific value in .main-header, block-level elements no longer fits the container w/c is why this is not recommended; removing the height solves this; the 'a' will now satisfy the condition of being a block-level element */

  margin-right: 30px;
  /* margin-top: 10px; */
  /* margin-top does not apply on inline elements; settind display to 'inline-block solves this */
  display: inline-block;

  /* text-align: center; */
  /* this can't be used to center an inline element since the space it occupies is exactly the content needs; no empty space inside of w/c the element can be centered; this must be set to the parent 'nav' in this case */
}

nav a:link:last-child {
  margin-right: 0;
  /* this is visible by clicking 'Inspect' --> Elements on Chrome */
}

button {
  font-size: 22px;
  padding: 20px;
  cursor: pointer;

  position: absolute;
  /* top: 50px;
  left: 50px; */
  /* top & left in relation to viewport */
  bottom: 50px;
  right: 50px;
  /* button position in relative to the body (position must be set to relative in the body selector; button now remains on the bottom-rt of the body even if the window is resized; this also works bec the button is inside the body */
}

h1::first-letter {
  /* 41. Pseudo-elements ........ audio prob 1:41 (16:51) --> chrome --> works on explorer  */
  font-style: normal;
  margin-right: 5px;
}

/* h2::first-letter {
  font-size: 80px;
} */

/* p::first-line {
  color: red;
} */

/* The adjacent sibling combinator (+) separates 2 selectors and matches the second element only if it immediately follows the 1st element, and both are children of the same parent; the 1st line of the p immediately after the h3; p & h3 are siblings */
h3 + p::first-line {
  /* color: red; */
}

h2 {
  /* background-color: orange; */
  position: relative;
}

/* In CSS, ::before creates a pseudo-element that is the first child of the selected element. It is often used to add cosmetic content to an element with the content property. It is inline by default. */

/* ::after creates a pseudo-element that is the last child of the selected element. It is often used to add cosmetic content to an element with the content property. It is inline by default. */
h2::after {
  content: "TOP";
  background-color: #ffe70e;
  color: #444;
  font-size: 16px;
  font-weight: bold;
  display: inline-block;
  /*  must be rendered as an inline-block box so that the box model will apply normally */
  padding: 5px 10px;
  /* to make the position of the pseudo-element("TOP", in this case) relative to the 'h2' element */
  position: absolute;
  /* it doesn't matter if ::before or ::after is used since the pseudo-element is positioned as absolute */
  /* top: 0;
  right: 0; */
  top: -15px;
  right: -25px;
}

/* Resolving Conflicts */
/* #copyright {
  color: red;
}

.copyright {
  color: blue;
}

.text {
  color: yellow;
}

footer p {
  color: green;  ======> color: green !important; just a hack & only used when needed!
} */

/* nav a:link,
nav p {
  font-size: 18px;
} */

/* put all elements in a container to center them all at once */

/* ************************************************** */
/* SUMMARY: INLINE, BLOCK-LEVEL & INLINE-BLOCK BOXES */
/* ************************************************** */
/* !!!! BLOCK-LEVEL
1) Elements formatted visually as blocks
2) 100% of parent's width
3) Vertically, one after another
4) Box-model applied as showed
*/

/* !!!! INLINE BOXES
1) Occupies only content's space
2) Causes no line-breaks
3) Box model is different: heights & widths do not apply
4) Paddings & margins only horizontal (left & rt )
*/

/* !!!!! INLINE-BLOCK BOXES (display: inline-block)
1) Looks like inline from the OUTSIDE, behaves like block-level on the INSIDE
  
  a) Occupies only content's space
  b) Causes no line-breaks

  c) Box-model applied as showed  
*/

/* FLOATS */
/* .author-img {
  float: left;
  margin-bottom: 20px;
}

.author {
  margin-top: 10px;
  float: left;
  margin-left: 20px;
}

h1 {
  float: left;
}

nav {
  float: right;
}

article {
  /* background-color: green; */
/* width: 825px;
  float: left;
}

aside {  */
/* background-color: red; */
/* width: 300px;
  float: right;
}

footer { */
/* background-color: yellow; */
/* clear: both;
} */

/* FLEXBOX */
.main-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.author-box {
  display: flex;
  align-items: center;
  margin-bottom: 15px;
}

.author {
  margin-bottom: 0;
  margin-left: 15px;
}

.related-post {
  display: flex;
  align-items: center;
  gap: 20px;
  margin-bottom: 30px;
}

.related-link:link {
  font-size: 17px;
  font-weight: bold;
  font-style: normal;
  margin-bottom: 5px;
  /* this won't work bec 'a' is an inline element */
  display: block;
  /* this would apply the margin */
}

.related-author {
  margin-bottom: 0;
  font-size: 14px;
  font-weight: normal;
  font-style: italic;
}
